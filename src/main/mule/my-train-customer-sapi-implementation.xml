<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce" xmlns:batch="http://www.mulesoft.org/schema/mule/batch"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:json-logger="http://www.mulesoft.org/schema/mule/json-logger" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/json-logger http://www.mulesoft.org/schema/mule/json-logger/current/mule-json-logger.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/salesforce http://www.mulesoft.org/schema/mule/salesforce/current/mule-salesforce.xsd">
	<json-logger:config name="JSON_Logger_Config" doc:name="JSON Logger Config" doc:id="6894d0f0-31a6-4065-ae77-eddf5efae748" applicationName="train-customer-sapi" applicationVersion="1.0" environment="dev" />
	<db:config name="Database_Config" doc:name="Database Config" doc:id="3077856e-7cdf-4f29-ae04-79784898fa0b" >
		<db:my-sql-connection host="64.227.37.97" port="3306" user="njclabs" password="training" database="nrs" />
	</db:config>
	<configuration-properties doc:name="Configuration properties" doc:id="d664a765-4f20-4a8d-86ac-b706eefcfc46" file="config.yaml" />
	<db:config name="Database_Config1" doc:name="Database Config" doc:id="aeb398e2-6662-4a45-8790-1283d42af029" >
		<db:my-sql-connection host="64.227.37.97" port="3306" user="njclabs" password="training" database="nrs" />
	</db:config>
	<salesforce:sfdc-config name="Salesforce_Config" doc:name="Salesforce Config" doc:id="94862d34-1497-4326-97db-b130d5cc4347" >
		<salesforce:basic-connection username="shanialif@gmail.com" password="shanisalesforce1$" securityToken="MMYxA3M7Appafq5dFu3B98dHY" connectionTimeout="1000000"/>
	</salesforce:sfdc-config>
	<flow name="getAllCustomersFlow" doc:id="4f5da9aa-9cce-4f11-9cb2-8c1a970db970" >
		<json-logger:logger doc:name="Logger" doc:id="35e27bda-0612-4e4e-8834-42d680cf253e" config-ref="JSON_Logger_Config" message="Flow Started"/>
		<try doc:name="Try" doc:id="9fef45d4-cfb1-4e9e-8d87-c24d7d77378c" >
			<db:select doc:name="Select" doc:id="fd176498-2038-4834-9632-3945f24c56d7" config-ref="Database_Config">
			<db:sql><![CDATA[SELECT * FROM nrs.xxtrain_customer_details]]></db:sql>
		</db:select>
			<error-handler >
				<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="12d98e29-23f6-4c80-af3f-7b366ceff5ad" >
					<ee:transform doc:name="Transform Message" doc:id="8a2f452c-a9f0-4ccd-a6a3-86d817b08609" >
						<ee:message >
							<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	description:error.detailedDescription
}]]></ee:set-payload>
						</ee:message>
					</ee:transform>
				</on-error-continue>
			</error-handler>
		</try>
		<ee:transform doc:name="Transform Message" doc:id="6d3f7a1e-73f4-4dda-a3a9-78ceac344307" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload map ( payload01 , indexOfPayload01 ) -> {
customerId: payload01.customer_id,
firstName: payload01.first_name,
lastName: payload01.last_name,
emailId: payload01.email_id default "",
phoneNo: payload01.phone_no,
"creationDate?": payload01.creation_date as Date as String,
"createdBy?": payload01.created_by default "",
"lastUpdatedDate?": payload01.last_updated_date as Date as String,
"lastUpdatedBy?": payload01.last_updated_by default ""
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<error-handler >
			<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="a37adf5d-7101-4b9c-82c5-d719041129ec" type="DB:BAD_SQL_SYNTAX">
				<set-payload value="Error Caught" doc:name="Set Payload" doc:id="af3f7882-daff-4e01-a919-1e90477559bb" />
				<logger level="INFO" doc:name="Logger" doc:id="832c0a0a-d31b-4f7f-9d20-9a4bbfc285e5" message="#[payload]"/>
			</on-error-continue>
		</error-handler>
	</flow>
	<flow name="getCustomerByIdFlow" doc:id="69f96fea-6613-4d4d-976c-ab3572d5ccc5" >
		<json-logger:logger doc:name="Logger" doc:id="66e84b21-c1d6-48aa-9943-e1c1fea27652" config-ref="JSON_Logger_Config" message="Flow Started"/>
		<try doc:name="Try" doc:id="2fcc6132-2fec-404a-bf05-edcba9ab6fc8" >
			<db:select doc:name="Select" doc:id="d70ca1c2-e259-47a9-b8d4-faac6f227b18" config-ref="Database_Config">
			<db:sql><![CDATA[SELECT * FROM xxtrain_customer_details WHERE customer_id =:customerId]]></db:sql>
			<db:input-parameters><![CDATA[#[{
customerId : attributes.uriParams.id	
}]]]></db:input-parameters>
		</db:select>
			<error-handler >
				<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="77af16c7-6c3c-48b9-aac6-9cf14b2ac2a5" type="DB:BAD_SQL_SYNTAX, DB:CONNECTIVITY, DB:QUERY_EXECUTION">
					<ee:transform doc:name="Transform Message" doc:id="8a714b55-55b3-4d36-808a-60991a720cf1" >
						<ee:message >
							<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	description:error.detailedDescription
}]]></ee:set-payload>
						</ee:message>
					</ee:transform>
				</on-error-continue>
			</error-handler>
		</try>
		<ee:transform doc:name="Transform Message" doc:id="378bcf58-ef61-44ce-afa6-c4429d68b6dd" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload map ( payload01 , indexOfPayload01 ) -> {
customerId: payload01.customer_id,
firstName: payload01.first_name,
lastName: payload01.last_name,
emailId: payload01.email_id default "",
phoneNo: payload01.phone_no,
"creationDate?": payload01.creation_date as Date as String,
"createdBy?": payload01.created_by default "",
"lastUpdatedDate?": payload01.last_updated_date as Date as String,
"lastUpdatedBy?": payload01.last_updated_by default ""
}
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<error-handler >
			<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="26df5bf5-d087-46ef-9fae-d71272afa7c5" >
				<ee:transform doc:name="Transform Message" doc:id="01b2057a-32c9-4411-820f-a0107aa85b58" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	description:error.detailedDescription
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</on-error-continue>
		</error-handler>
	</flow>
	<flow name="getSubscriptionsOfACustomerFlow" doc:id="8f96cb16-8eee-45f7-be44-314dbd3ba3d3" >
		<json-logger:logger doc:name="Logger" doc:id="44e897fc-1029-4f60-a5d0-474270cb96c9" config-ref="JSON_Logger_Config" message="Flow Started"/>
		<db:select doc:name="Select" doc:id="93a34d52-9a51-41d3-ba66-022ce8beab7e" config-ref="Database_Config">
			<db:sql ><![CDATA[SELECT * FROM nrs.xxtrain_subscription_details WHERE customer_id=:customer_id]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
customer_id : attributes.uriParams.id
}]]]></db:input-parameters>
		</db:select>
		<ee:transform doc:name="Transform Message" doc:id="fbd0f448-250c-4727-9423-64a077a6337d" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload map ( payload01 , indexOfPayload01 ) -> {
	subscriptionId: payload01.subscription_id,
	user_id: payload01.customer_id,
	service_id: payload01.service_id default "",
	alert_service: payload01.alert_service default "",
	delay_status: payload01.delay_status default "",
	status_type_id: payload01.status_type_id,
	departureTime: payload01.to_time as String default "",
	arrivalTime: payload01.from_time as String default "",
	fromStation: payload01.from_station default "",
	toStation: payload01.to_station default "",
	startDate: payload01.journey_date as String default "",
	serviceType: payload01.service_type default "",
	route: payload01.route default "",
	timePeriod: payload01.advance_notify_time default 0,
	"creationDate?": payload01.creation_date as String,
	"createdBy?": payload01.created_by default "",
	"lastUpdatedDate?": payload01.last_updated_date as String,
	"lastUpdatedBy?": payload01.last_updated_by default ""
}

]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="getParticularSubscriptionsOfACustomerIdFlow" doc:id="0a505e3f-c396-402f-896c-9bfbfafa0e30" >
		<json-logger:logger doc:name="Logger" doc:id="d8671116-579b-4ded-bce1-a40aa3541851" config-ref="JSON_Logger_Config" message="Flow Started"/>
		<db:select doc:name="Select" doc:id="caa65e5b-9638-434a-9f65-e5400304f4f6" config-ref="Database_Config">
			<db:sql ><![CDATA[SELECT * FROM nrs.xxtrain_subscription_details WHERE customer_id=:customer_id
and subscription_id=:subscriptionId]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
customer_id : attributes.uriParams.id,
subscriptionId :attributes.uriParams.subscriptionId


}]]]></db:input-parameters>
		</db:select>
		<ee:transform doc:name="Transform Message" doc:id="15d8bee0-a018-4776-acef-13ad6afb2eac" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload map ( payload01 , indexOfPayload01 ) -> {
	subscriptionId: payload01.subscription_id,
	user_id: payload01.customer_id,
	service_id: payload01.service_id default "",
	alert_service: payload01.alert_service default "",
	delay_status: payload01.delay_status default "",
	status_type_id: payload01.status_type_id,
	departureTime: payload01.to_time as String default "",
	arrivalTime: payload01.from_time as String default "",
	fromStation: payload01.from_station default "",
	toStation: payload01.to_station default "",
	startDate: payload01.journey_date as String default "",
	serviceType: payload01.service_type default "",
	route: payload01.route default "",
	timePeriod: payload01.advance_notify_time default 0,
	"creationDate?": payload01.creation_date as String,
	"createdBy?": payload01.created_by default "",
	"lastUpdatedDate?": payload01.last_updated_date as String,
	"lastUpdatedBy?": payload01.last_updated_by default ""
}

]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="postACustomer" doc:id="e8b05cb0-9185-4910-aab5-091e6e0edb1e" >
		<json-logger:logger doc:name="Logger" doc:id="243ab01d-f449-413e-b52e-63329982584f" config-ref="JSON_Logger_Config" message="Flow Started"/>
		<db:insert doc:name="Insert" doc:id="fcaa58ac-0051-4b45-8133-cd04e937039b" config-ref="Database_Config">
			<db:sql ><![CDATA[INSERT INTO xxtrain_customer_details (customer_id,first_name,last_name,status_type_id,email_id,phone_no,creation_date,created_by,last_updated_date,last_updated_by) values
 (:custId,:fname,:lastName,:status_id,:email,:phoneNo,:createdDate,:createdBy,:lastUpdatedDate,:lastUpdatedBy)]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
custId:payload[0].custId,	
fname:payload[0].firstName,
lastName:payload[0].lastName,
email:payload[0].emailId,
phoneNo:payload[0].phoneNo,
createdDate:now(),
createdBy:payload[0].createdBy?,
lastUpdatedDate:now(),
lastUpdatedBy:payload[0].lastUpdatedBy?,
status_id:payload[0].statusId
}]]]></db:input-parameters>
		</db:insert>
		<json-logger:logger doc:name="Logger" doc:id="a050b49c-bb5d-4c7f-9635-40f40d6b4dfe" config-ref="JSON_Logger_Config" message="Flow Started"/>
	</flow>
	<flow name="postASubscription" doc:id="db375213-d26b-4905-917d-828f171c49cc" >
		<json-logger:logger doc:name="Logger" doc:id="87699f0d-1426-43f2-ad2c-48fca267d625" config-ref="JSON_Logger_Config" message="Flow Started"/>
		<db:insert doc:name="Insert" doc:id="19c46c65-b47e-472f-a8bb-fe93a6e38c5e" config-ref="Database_Config">
			<db:sql ><![CDATA[INSERT INTO nrs.xxtrain_subscription_details (customer_id,service_id,from_time,from_station,to_station,to_time,journey_date,service_type,route,advance_notify_time,alert_service,delay_status,status_type_id,creation_date,created_by,last_updated_date,last_updated_by)values
(:customer_id,:service_id,:from_time,:from_station,:to_station,:to_time,:journey_date,:service_type,:route,:advance_notify_time,:alert_service,:delay_status,:status_type_id,:creation_date,:created_by,:last_updated_date,:last_updated_by)]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
customer_id :payload[0].user_id,
service_id :payload[0].service_id,
from_time :payload[0].arrivalTime,
from_station:payload[0].fromStation,
to_station : payload[0].toStation,
to_time : payload[0].departureTime,
journey_date :payload[0].startDate,
service_type :payload[0].serviceType,
route :payload[0].route,
advance_notify_time :payload[0].timePeriod,
alert_service :payload[0].alert_service,
delay_status :payload[0].delay_status,
status_type_id :payload[0].status_type_id,
creation_date :now(),
created_by :payload[0].createdBy?,
last_updated_date :now(),
last_updated_by : payload[0].lastUpdatedBy
}]]]></db:input-parameters>
		</db:insert>
		<json-logger:logger doc:name="Logger" doc:id="019b3632-b272-4da0-ac36-91ad4f1eeb27" config-ref="JSON_Logger_Config" message="After Insert Operation"/>
	</flow>
	<flow name="customerUpdateFlow" doc:id="b8033274-08aa-4ea0-95c8-3deae4577f09" >
		<json-logger:logger doc:name="Logger" doc:id="3edb4e1f-e715-43cc-bfbd-721a68209175" config-ref="JSON_Logger_Config" message="Flow Started"/>
		<db:update doc:name="Update" doc:id="ec4d373b-1325-4599-a889-88354af32f79" config-ref="Database_Config">
			<db:sql ><![CDATA[UPDATE nrs.xxtrain_customer_details 
SET phone_no =:phone_no WHERE customer_id=:customer_id]]></db:sql>
			<db:input-parameters ><![CDATA[#[{   
	customer_id : payload[0].customerId,
	phone_no : payload[0].phoneNo
	
	
}]]]></db:input-parameters>
		</db:update>
		<json-logger:logger doc:name="Logger" doc:id="189871b0-4cb0-4d02-ad3e-ae1bd3b63f70" config-ref="JSON_Logger_Config" message="After Update"/>
	</flow>
	<flow name="postAnAlert" doc:id="0e386262-ea9d-4a90-a73b-281222547217" >
		<json-logger:logger doc:name="Logger" doc:id="fa8ba69e-8da2-42b4-9959-36d528a2056b" config-ref="JSON_Logger_Config" message="Flow Started"/>
		<db:insert doc:name="Insert" doc:id="04645f3b-26a2-4f29-97cb-dc261f4315ba" config-ref="Database_Config">
			<db:sql ><![CDATA[ INSERT INTO xxtrain_alert_details (subscription_id,email_id,email_notify,origin_location,destination_location,service_type,service_id,
delay_status,delay_time,train_delay_reason,status_type_id,creation_date,created_by,last_updated_date,last_updated_by) values (
:subscriptionId,:emailId,:emailNotify,:fromStation,:toStation,:serviceType,:serviceId,:delaystatus,:delayTime,:reason,:statusTypeid,
:createdDate,:createdBy,:updatedDate,:updatedBy)
]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
"subscriptionId":payload[0].subscription_id,
"emailId":payload[0].email_id  ,
"emailNotify":payload[0].email_notify,
"fromStation":payload[0].origin_location,
"toStation":payload[0].destination_location,
"serviceType":payload[0].service_type,
"serviceId":payload[0].service_id,
"serviceType":payload[0].serviceType,
"delaystatus":payload[0].delay_status,
"delayTime":payload[0].delay_time,
"reason":payload[0].train_delay_reason,
"statusTypeid":payload[0].status_type_id,

"createdDate":now(),
"createdBy":payload[0].createdBy?,
"updatedDate":now(),
"updatedBy":payload[0].lastUpdatedBy?
}]]]></db:input-parameters>
		</db:insert>
		<json-logger:logger doc:name="Logger" doc:id="abe6d151-fd79-4324-942e-6a7763f2e993" config-ref="JSON_Logger_Config" message="After insert"/>
	</flow>
	<flow name="salesforceFlow" doc:id="31b10ee5-3dcb-4953-b6cd-6db088684864" >
		<json-logger:logger doc:name="Logger" doc:id="52361c8a-5e1e-4454-94aa-6b9110cccf3a" config-ref="JSON_Logger_Config" message="SF Flow started"/>
		<db:select doc:name="Select" doc:id="796fc64b-91d3-41d3-8ac5-d7be665eb280" config-ref="Database_Config1">
			<db:sql ><![CDATA[select customer_id,first_name,last_name,email_id,phone_no
from xxtrain_customer_details a,xxtrain_status_details b where customer_id in 
(select distinct customer_id from xxtrain_subscription_details c where customer_id = c.customer_id GROUP BY customer_id
HAVING COUNT(customer_id) >= 1) and b.status_type_id = a.status_type_id and b.status_type_name = 'ACTIVE';]]></db:sql>
		</db:select>
		<ee:transform doc:name="Transform Message" doc:id="59c17d0e-8ea6-43e9-ab99-7dc77f8716b1" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
payload map(payload01,index)->
{
	
	"FirstName":payload01.first_name as String,
	"LastName":payload01.last_name as String,
	"Phone":payload01.phone_no as Number,
	"Email":payload01.email_id as String
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<batch:job jobName="my-train-customer-sapi-implementationBatch_Job" doc:id="90669ccc-75da-441d-9802-b13168d123ce" >
			<batch:process-records >
				<batch:step name="isContactinSalesforce" doc:id="16cb2c4e-398c-4d3b-92e2-dda648d16d6e" >
					<salesforce:query doc:name="Contacts" doc:id="bc6aaee8-f6f1-4bbc-af56-446b4eacc27e" config-ref="Salesforce_Config" target="exists" targetValue="#[(sizeOf(payload)&gt;0)]">
						<salesforce:salesforce-query ><![CDATA[select LastName from Contact where LastName = ':lname' and Email = ':email']]></salesforce:salesforce-query>
						<salesforce:parameters ><![CDATA[#[output application/java
---
{
	"lname":payload.LastName default " " as String,
	"email":payload.Email default " " as String
	
	
}]]]></salesforce:parameters>
					</salesforce:query>
				</batch:step>
				<batch:step name="Batch_Step1" doc:id="532af59d-9b6d-4c86-8929-1ba168bda431" acceptExpression="#[not vars.exists]">
					<batch:aggregator doc:name="Batch Aggregator" doc:id="d9b774d7-3e50-4ee8-8ac0-487a390b3093" size="3">
						<salesforce:create doc:name="Create" doc:id="f794bdf4-fa69-4bc4-939d-2af0da4e0b67" config-ref="Salesforce_Config" type="Contact"/>
						<ee:transform doc:name="Transform Message" doc:id="6d38127e-2e75-4a06-92ff-3e5af36c50e7" >
							<ee:message >
								<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	Description:"Success",
	Message:payload.items.message
}]]></ee:set-payload>
							</ee:message>
						</ee:transform>
					</batch:aggregator>
				</batch:step>
			</batch:process-records>
			<batch:on-complete >
				<json-logger:logger doc:name="Logger" doc:id="be0ee8d7-6f97-4a2a-9acb-5095a46a2967" config-ref="JSON_Logger_Config" message="Complete"/>
			</batch:on-complete>
		</batch:job>
		<ee:transform doc:name="Transform Message" doc:id="2cfb96ce-eeca-413c-b6bd-2756d7e72a60" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	Description:"Records entered in Salesforce"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="d4a08299-6112-4849-b4b6-55618ae0f1c7" message="#[payload]"/>
	</flow>
</mule>
